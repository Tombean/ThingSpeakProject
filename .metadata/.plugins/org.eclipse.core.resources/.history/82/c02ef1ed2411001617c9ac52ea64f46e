import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Random;

public class HighScore1 {
	
	public String[] getScores(int server){
		String adresse = "https://api.thingspeak.com/channels/"+server+"/feeds.csv";
		File f = new File(adresse);
		FileInputStream fis = null;
		String fileContent = "";
		String[] tokens;
		 try {
	         // On instancie notre objet :
	         // fis va lire le fichier
	         fis = new FileInputStream( f );
	         
	         getFileContent(fis, fileContent);
	         
	         String delims = "[,]+";
	         tokens = fileContent.split(delims);
	      
	      } catch (FileNotFoundException e) {
	         // Cette exception est levée si l'objet FileInputStream ne trouve aucun fichier
	         e.printStackTrace();
	      } catch (IOException e) {
	         // Celle-ci se produit lors d'une erreur d'écriture ou de lecture
	         e.printStackTrace();
	      } finally {
	         // On ferme nos flux de données dans un bloc finally pour s'assurer que ces instructions seront exécutées dans tous les cas même si une exception est levée !
	         try {
	            if (fis != null)
	               fis.close();
	         } catch (IOException e) {
	            e.printStackTrace();
	         }

	     }
		 return tokens;
	}
	
	public static String getFileContent( FileInputStream fis, String encoding ) throws IOException
	 {
	   try( 
			   BufferedReader br = new BufferedReader( new InputStreamReader(fis, encoding )))
	   {
		   StringBuilder builder = new StringBuilder();
		   int ch;
		   while((ch = fis.read()) != -1){
		       builder.append((char)ch);
		   }

	      return builder.toString();
	      }
	      
	 }

}
